<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Encriptador</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f7fa;
            margin: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 80vh;
        }

        header {
            text-align: center;
            width: 50%;
            padding: 1rem;
            background-color: #0d045a;
            color: #fff;
            border-radius: 100px;
        }

        header h1 {
            margin: 0;
        }

        main {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            width: 80%;
            background-color: #fff;
            padding: 2rem;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
        }

        .input-section, .result-section {
            width: 100%;
            margin-bottom: 1rem;
            text-align: center;
        }

        .input-section input, .input-section button {
            display: block;
            width: 80%;
            margin: 1rem auto;
            padding: 1rem;
            border: 2px solid #03723e;
            border-radius: 10px;
            font-size: 1rem;
        }

        .input-section button {
            width: 50%;
            padding: 1rem;
            font-size: 1.2rem;
            background-color: #012246;
            color: #fff;
            border: none;
            cursor: pointer;
        }

        .input-section button:hover {
            background-color: #001a3d;
        }

        .instructions {
            margin-bottom: 1rem;
            color: #666;
            font-size: 1rem;
        }

        .result-panel {
            width: 100%;
            padding: 1rem;
            border: 2px solid #007940;
            border-radius: 50px;
            background-color: #e0f7fa;
            color: #00796b;
            font-size: 1rem;
            text-align: center;
        }

        .result-section p {
            color: #666;
            font-size: 1rem;
            text-align: center;
        }
    </style>
</head>
<body>
    <header>
        <h1>Encriptador</h1>
    </header>
    <main>
        <div class="instructions">
            <p>-Ingresa el texto que deseas encriptar o desencriptar. </p>
            <p>-Puedes incluir letras y números.</p>
        </div>
        <div class="input-section">
            <input type="text" id="textToEncrypt" placeholder="Ingrese el texto aquí">
            <input type="number" id="shiftEncrypt" placeholder="Ingrese la clave" value="3">
            <button onclick="encryptText()">Encriptar</button>
            <button onclick="decryptText()">Desencriptar</button>
            <button id="voice-to-text">Convertir Voz a Texto</button> 
        </div>
        <div class="result-section">
            <div id="resultPanel" class="result-panel">Ningún mensaje fue encontrado. Ingresa el texto que desees encriptar o desencriptar.</div>
        </div>
    </main>
    <script>
        const alphabet = 'abcdefghijklmnopqrstuvwxyz';
        const numbers = '0123456789';

        function encryptCesar(text, shift) {
            let result = '';

            for (let r = 0; r < text.length; r++) {
                let char = text[r];
                if (alphabet.includes(char)) {
                    let currentIndex = alphabet.indexOf(char);
                    let newIndex = (currentIndex + shift) % 26;
                    result += alphabet[newIndex];
                } else if (numbers.includes(char)) {
                    let currentIndex = numbers.indexOf(char);
                    let newIndex = (currentIndex + shift) % 10;
                    result += numbers[newIndex];
                } else {
                    result += char;
                }
            }

            return result;
        }

        function encryptText() {
            let text = document.getElementById('textToEncrypt').value.toLowerCase();
            let shift = parseInt(document.getElementById('shiftEncrypt').value);
            let encryptedText = encryptCesar(text, shift);
            document.getElementById('resultPanel').innerText = 'Texto Encriptado: ' + encryptedText;
        }

        function decryptCesar(text, shift) {
            return encryptCesar(text, 26 - shift);
        }

        function decryptText() {
            let text = document.getElementById('textToEncrypt').value.toLowerCase();
            let shift = parseInt(document.getElementById('shiftEncrypt').value);
            let decryptedText = decryptCesar(text, shift);
            document.getElementById('resultPanel').innerText = 'Texto Desencriptado: ' + decryptedText;
        }

        // Funcionalidad para convertir voz a texto y decir "Ready, Adriana, I am Robert"
        document.addEventListener('DOMContentLoaded', () => {
            document.getElementById('voice-to-text').addEventListener('click', startVoiceToText);
        });

        function startVoiceToText() {
            sayReady(); 
            
            const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
            recognition.lang = 'es-ES';
            recognition.start();

            recognition.onresult = (event) => {
                const transcript = event.results[0][0].transcript;
                document.getElementById('textToEncrypt').value = transcript; // Insertar el texto en el campo de encriptar
            };

            recognition.onerror = (event) => {
                console.error('Error de reconocimiento de voz:', event.error);
                alert('Error de reconocimiento de voz. Inténtalo de nuevo.');
            };
        }


        function sayReady() {
            const utterance = new SpeechSynthesisUtterance("Ready!, For work!");
            const voices = speechSynthesis.getVoices();
            const jarvisVoice = voices.find(voice => voice.lang === 'en-US' && voice.name.includes('en-US'));

            if (jarvisVoice) {
                utterance.voice = jarvisVoice;
            } else {
                utterance.voice = voices.find(voice => voice.lang === 'en-US');
            }

            utterance.pitch = 0.9;
            utterance.rate = 1.1;
            speechSynthesis.speak(utterance);
        }
    </script>  
</body>
</html>
